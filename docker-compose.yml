version: '3.8'

services:
  # Frontend - Angular Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      - backend
    networks:
      - cv-network

  # Backend - FastAPI Application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=postgresql://cv_user:cv_password@postgres:5432/cv_database
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
    depends_on:
      - postgres
      - redis
    networks:
      - cv-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=cv_database
      - POSTGRES_USER=cv_user
      - POSTGRES_PASSWORD=cv_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - cv-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cv-network

  # Celery Worker
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    command: celery -A app.celery worker --loglevel=info
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=postgresql://cv_user:cv_password@postgres:5432/cv_database
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - cv-network

  # Documentation - Docusaurus
  docs:
    build:
      context: ./docs
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./docs:/app
      - /app/node_modules
    networks:
      - cv-network

volumes:
  postgres_data:
  redis_data:

networks:
  cv-network:
    driver: bridge 